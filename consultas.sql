-- Categorias doadas em determinado mês
SELECT COUNT(CATEGORIA.NOME) AS QTDE, CATEGORIA.NOME AS CATEGORIA
FROM TRANSACAO
JOIN ITEM ON (TRANSACAO.ITEM = ITEM.SERIAL)
JOIN CATEGORIA ON (ITEM.CATEGORIA = CATEGORIA.NOME)
WHERE
    TRANSACAO.DATA_HORA BETWEEN
        '2014-07-03 00:00:00' AND
        '2023-02-01 00:00:00'
GROUP BY CATEGORIA.NOME
ORDER BY CATEGORIA.NOME;


-- Doações para escolas com menos de 3 alunos
SELECT ITEM.CATEGORIA AS CATEGORIA, ESCOLA.NOME AS ESCOLA, ALUNO.NOME AS ALUNO
FROM TRANSACAO
    JOIN ITEM ON (TRANSACAO.ITEM = ITEM.SERIAL)
    JOIN ALUNO ON (ITEM.ALUNO = ALUNO.CPF)
    JOIN ESCOLA ON (ALUNO.ESCOLA = ESCOLA.COMUM)
WHERE
    (SELECT COUNT(*) FROM ALUNO WHERE (ALUNO.ESCOLA = ESCOLA.COMUM)) < 3
ORDER BY
    TRANSACAO.DATA_HORA


-- Chat de usuários de determinado post
SELECT 
    C.USUARIO1 AS CRIADOR_POST, C.USUARIO2 AS MATCH, C.TEXTO AS CHAT
FROM 
    CHAT C 
    JOIN POST P ON P.EMAIL = C.USUARIO1;


-- Usuário e sua maior avaliação
SELECT 
    U.NOME AS NOME, MAX(A.NOTA) AS MAX
FROM 
    USUARIO U 
    LEFT JOIN AVALIA A ON U.EMAIL = A.USUARIO2
GROUP BY 
    U.NOME;


-- Usuários avaliados por todos os colaboradores (Sql Nested + Divisão Relacional)
SELECT U.NOME
FROM USUARIO U JOIN AVALIA A ON (A.USUARIO2 = U.EMAIL)
WHERE NOT EXISTS (
    (
        SELECT UA.EMAIL
        FROM USUARIO UA JOIN COMUM C ON (UA.EMAIL = C.USUARIO)
        WHERE UPPER(C.FUNCAO) = 'COLABORADOR'
    )
        MINUS
    (
        SELECT A.USUARIO1
        FROM AVALIA A
        WHERE U.EMAIL = A.USUARIO2
    )
)
GROUP BY U.NOME