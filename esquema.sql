-- USUARIO
CREATE TABLE USUARIO(
    EMAIL VARCHAR2(30),
    NOME VARCHAR2(30),
    CARGO VARCHAR2(30) NOT NULL,
    TELEFONE NUMBER(20),
    CEP NUMBER(10),
    NUMERO NUMBER(10),
    COMPLEMENTO VARCHAR(50),
    CONSTRAINT PK_USUARIO PRIMARY KEY(EMAIL),
    CONSTRAINT CK_EMAIL CHECK(REGEXP_LIKE(EMAIL, '^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$')),
    CONSTRAINT CK_CARGO CHECK(UPPER(CARGO) IN ('COMUM', 'ADMINISTRADOR'))
);

-- COMUM
CREATE TABLE COMUM(
    USUARIO VARCHAR2(30),
    FUNCAO VARCHAR2(30),
    CONSTRAINT PK_COMUM PRIMARY KEY(USUARIO),
    CONSTRAINT FK_COMUM_USUARIO FOREIGN KEY(USUARIO) REFERENCES USUARIO(EMAIL),
    CONSTRAINT CK_FUNCAO CHECK(UPPER(FUNCAO) IN ('ESCOLA', 'COLABORADOR'))
);

-- ADMINISTRADOR
CREATE TABLE ADMINISTRADOR(
    USUARIO VARCHAR2(30),
    CONSTRAINT PK_ADMINISTRADOR PRIMARY KEY(USUARIO),
    CONSTRAINT FK_ADMINISTRADOR_USUARIO FOREIGN KEY(USUARIO) REFERENCES USUARIO(EMAIL)
);

-- REMOVER USUARIO
CREATE TABLE REMOVER_USUARIO(
    USUARIO_REMOVIDO VARCHAR2(30),
    ADMINISTRADOR VARCHAR2(30),
    CONSTRAINT PK_REMOVER_USUARIO PRIMARY KEY(USUARIO_REMOVIDO),
    CONSTRAINT FK_REMOVES_USUARIO_ADMINISTRADOR FOREIGN KEY(ADMINISTRADOR) REFERENCES ADMINISTRADOR(USUARIO)
);

-- ESCOLA
CREATE TABLE ESCOLA(
    COMUM VARCHAR2(30),
    CODIGO_MEC VARCHAR2(30),
    NOME VARCHAR2(30),
    CPF VARCHAR2(11) NOT NULL,
    TELEFONE NUMBER(20),
    ADMINISTRADOR VARCHAR2(30),
    CONSTRAINT PK_ESCOLA PRIMARY KEY(COMUM),
    CONSTRAINT FK_ESCOLA_COMUM FOREIGN KEY(COMUM) REFERENCES COMUM(USUARIO),
    CONSTRAINT FK_ESCOLA_ADMINISTRADOR FOREIGN KEY(ADMINISTRADOR) REFERENCES ADMINISTRADOR(USUARIO),
    CONSTRAINT UQ_CODIGO_MEC UNIQUE(CODIGO_MEC)
);

-- ALUNO
CREATE TABLE ALUNO(
    CPF VARCHAR2(11),
    ESCOLA VARCHAR2(30),
    NOME VARCHAR2(30),
    TELEFONE NUMBER(20),
    EMAIL VARCHAR2(30),
    NASCIMENTO DATE,
    CEP NUMBER(10),
    NUMERO NUMBER(10),
    COMPLEMENTO VARCHAR(50),
    CONSTRAINT PK_ALUNO PRIMARY KEY(CPF),
    CONSTRAINT FK_ALUNO_ESCOLA FOREIGN KEY(ESCOLA) REFERENCES ESCOLA(COMUM),
    CONSTRAINT CK_EMAIL_ALUNO CHECK(REGEXP_LIKE(EMAIL, '^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$'))
);

-- COLABORADOR
CREATE TABLE COLABORADOR(
    COMUM VARCHAR2(30),
    TIPO VARCHAR2(30) NOT NULL,
    CPF_CNPJ VARCHAR2(14),
    DATA_NASCIMENTO DATE,
    RAZAO_SOCIAL VARCHAR2(30),
    CONSTRAINT PK_COLABORADOR PRIMARY KEY(COMUM),
    CONSTRAINT FK_COLABORADOR_COMUM FOREIGN KEY(COMUM) REFERENCES COMUM(USUARIO),
    CONSTRAINT UQ_CPF_CNPJ UNIQUE(CPF_CNPJ),
    CONSTRAINT CK_TIPO_COLABORADOR CHECK(UPPER(TIPO) IN ('PESSOA FISICA', 'PESSOA JURIDICA'))
);

-- CATEGORIA
CREATE TABLE CATEGORIA(
    NOME VARCHAR2(30),
    DESCRICAO VARCHAR2(100),
    ADMINISTRADOR VARCHAR2(30),
    CONSTRAINT PK_CATEGORIA PRIMARY KEY(NOME),
    CONSTRAINT FK_CATEGORIA_ADMINISTRADOR FOREIGN KEY(ADMINISTRADOR) REFERENCES ADMINISTRADOR(USUARIO)
);

-- ITEM
CREATE TABLE ITEM(
    SERIAL VARCHAR2(10),
    VALOR NUMBER(10),
    DESCRICAO VARCHAR2(100),
    CATEGORIA VARCHAR2(30),
    ALUNO VARCHAR2(11),
    COLABORADOR VARCHAR2(30),
    CONSTRAINT PK_ITEM PRIMARY KEY(SERIAL),
    CONSTRAINT FK_ITEM_CATEGORIA FOREIGN KEY(CATEGORIA) REFERENCES CATEGORIA(NOME),
    CONSTRAINT FK_ITEM_ALUNO FOREIGN KEY(ALUNO) REFERENCES ALUNO(CPF),
    CONSTRAINT FK_ITEM_COLABORADOR FOREIGN KEY(COLABORADOR) REFERENCES COLABORADOR(COMUM)
);

-- PERFIL
CREATE TABLE PERFIL(
    EMAIL VARCHAR2(30),
    NOME VARCHAR2(30),
    AVALIACOES VARCHAR2(100),
    ADMINISTRADOR VARCHAR2(30),
    CONSTRAINT PK_PERFIL PRIMARY KEY(EMAIL),
    CONSTRAINT FK_PERFIL_ADMINISTRADOR FOREIGN KEY(ADMINISTRADOR) REFERENCES ADMINISTRADOR(USUARIO)
);

-- AVALIA
CREATE TABLE AVALIA(
    USUARIO1 VARCHAR2(30),
    USUARIO2 VARCHAR2(30),
    NOTA NUMBER(2),
    CONSTRAINT PK_AVALIA PRIMARY KEY(USUARIO1, USUARIO2),
    CONSTRAINT FK_AVALIA_USUARIO1 FOREIGN KEY(USUARIO1) REFERENCES USUARIO(EMAIL),
    CONSTRAINT FK_AVALIA_USUARIO2 FOREIGN KEY(USUARIO2) REFERENCES USUARIO(EMAIL),
    CONSTRAINT CK_AVALIA CHECK(USUARIO1 NOT LIKE USUARIO2)
);

-- CHAT
CREATE TABLE CHAT(
    USUARIO1 VARCHAR2(30),
    USUARIO2 VARCHAR2(30),
    DATA_HORA TIMESTAMP,
    TEXTO VARCHAR2(200),
    CONSTRAINT PK_CHAT PRIMARY KEY(USUARIO1, USUARIO2, DATA_HORA),
    CONSTRAINT FK_CHAT_USUARIO1 FOREIGN KEY(USUARIO1) REFERENCES USUARIO(EMAIL),
    CONSTRAINT FK_CHAT_USUARIO2 FOREIGN KEY(USUARIO2) REFERENCES USUARIO(EMAIL),
    CONSTRAINT CK_CHAT CHECK(USUARIO1 NOT LIKE USUARIO2)
);

-- POST
CREATE TABLE POST(
    ID NUMBER(10),
    EMAIL VARCHAR2(30) NOT NULL,
    DATA_HORA TIMESTAMP NOT NULL,
    TITULO VARCHAR2(30),
    IMAGEM VARCHAR2(30),
    TIPO VARCHAR2(30) NOT NULL,
    CONSTRAINT PK_POST PRIMARY KEY(ID),
    CONSTRAINT UQ_EMAIL_DATA_HORA UNIQUE(EMAIL, DATA_HORA),
    CONSTRAINT CK_TIPO CHECK(UPPER(TIPO) IN ('SOLICITACAO', 'DOACAO'))
);

-- EXCLUI POST
CREATE TABLE EXCLUI_POST(
    ID_POST NUMBER(10),
    ADMINISTRADOR VARCHAR2(30),
    CONSTRAINT PK_EXCLUI_POST PRIMARY KEY(ID_POST),
    CONSTRAINT FK_EXCLUI_POST FOREIGN KEY(ID_POST) REFERENCES POST(ID),
    CONSTRAINT FK_EXCLUI_POST_ADMINISTRADOR FOREIGN KEY(ADMINISTRADOR) REFERENCES ADMINISTRADOR(USUARIO)
);

-- COMENTARIO
CREATE TABLE COMENTARIO(
    ID_POST NUMBER(10),
    EMAIL VARCHAR2(30),
    DATA_HORA TIMESTAMP,
    CONTEUDO VARCHAR(100),
    CONSTRAINT PK_COMENTARIO PRIMARY KEY (ID_POST, EMAIL, DATA_HORA),
    CONSTRAINT FK_COMENTARIO_POST FOREIGN KEY(ID_POST) REFERENCES POST(ID),
    CONSTRAINT FK_COMENTARIO_USUARIO FOREIGN KEY(EMAIL) REFERENCES USUARIO(EMAIL)
);

-- TRANSACAO
CREATE TABLE TRANSACAO(
     ITEM VARCHAR2(10),
     USUARIO VARCHAR2(30),
     DATA_HORA TIMESTAMP,
     CONSTRAINT PK_TRANSACAO PRIMARY KEY(ITEM),
     CONSTRAINT UQ_USUARIO_DATA_HORA UNIQUE(USUARIO, DATA_HORA),
     CONSTRAINT FK_TRANSACAO_ITEM FOREIGN KEY(ITEM) REFERENCES ITEM(SERIAL),
     CONSTRAINT FK_TRANSACAO_USUARIO FOREIGN KEY(USUARIO) REFERENCES USUARIO(EMAIL)
);
